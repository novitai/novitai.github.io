(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{627:function(t,n){t.exports={attributes:{title:"My Markdown-It Configuration",date:"2020-02-16T00:00:00.000Z",description:"An overview of the markdown-it and highlight.js configurations used on my website",tags:[]},html:'<nav class="table-of-contents"><ol><li><a href="#the-configuration">The Configuration</a><ol><li><a href="#configuring-highlight.js">Configuring Highlight.js</a></li><li><a href="#configuring-markdown-it">Configuring Markdown-It</a></li></ol></li><li><a href="#markdown-it-plugins">Markdown-It Plugins</a></li></ol></nav><post-aside type="info">\n<p>My Markdown configuration has changed considerably since I wrote this blog post but this is still a good starting point! If you want to view my updated configuration, <a href="https://github.com/gregives/gregives.co.uk/blob/master/config/markdown.js">view the source on GitHub</a>.</p>\n</post-aside>\n<p>I use <a href="https://github.com/markdown-it/markdown-it">markdown-it</a> and <a href="https://highlightjs.org">highlight.js</a> to render my blog posts. Out of the box, markdown-it and highlight.js may provide all the functionality you need, however, customising them enables you to do stuff like:</p>\n<ul>\n<li>Display the language of code blocks</li>\n<li>Add new language aliases for syntax highlighting</li>\n<li>Use <a href="http://getbem.com/naming">BEM</a> class names</li>\n<li>Add heading anchors</li>\n<li>Use proper quote characters e.g. “”</li>\n<li>Open external links in new tabs</li>\n<li>Write abbreviations, subscript, superscript and more in Markdown</li>\n</ul>\n<h2 id="the-configuration" tabindex="-1"><a class="header-anchor" href="#the-configuration">The Configuration</a></h2>\n<p>I’ve been slowly tinkering with my configuration and I’ll keep updating this blog post as I change it. In this short blog post I’ll explain everything in the configuration, but before I do that, here’s the whole thing:</p>\n<pre class="highlight" data-language="js"><code><span class="highlight__lines"><span data-number=" 1"></span><span data-number=" 2"></span><span data-number=" 3"></span><span data-number=" 4"></span><span data-number=" 5"></span><span data-number=" 6"></span><span data-number=" 7"></span><span data-number=" 8"></span><span data-number=" 9"></span><span data-number="10"></span><span data-number="11"></span><span data-number="12"></span><span data-number="13"></span><span data-number="14"></span><span data-number="15"></span><span data-number="16"></span><span data-number="17"></span><span data-number="18"></span><span data-number="19"></span><span data-number="20"></span><span data-number="21"></span><span data-number="22"></span><span data-number="23"></span><span data-number="24"></span><span data-number="25"></span><span data-number="26"></span><span data-number="27"></span><span data-number="28"></span><span data-number="29"></span><span data-number="30"></span><span data-number="31"></span><span data-number="32"></span><span data-number="33"></span><span data-number="34"></span><span data-number="35"></span><span data-number="36"></span><span data-number="37"></span><span data-number="38"></span><span data-number="39"></span><span data-number="40"></span></span><span class="highlight__code"><span class="highlight__keyword">const</span> hljs = <span class="highlight__built_in">require</span>(<span class="highlight__string">\'highlight.js\'</span>)\nhljs.<span class="highlight__title function_">configure</span>({\n  <span class="highlight__attr">classPrefix</span>: <span class="highlight__string">\'highlight__\'</span>\n})\nhljs.<span class="highlight__title function_">registerLanguage</span>(<span class="highlight__string">\'vue\'</span>, <span class="highlight__function">() =&gt;</span> hljs.<span class="highlight__title function_">getLanguage</span>(<span class="highlight__string">\'html\'</span>))\n\n<span class="highlight__keyword">const</span> markdown = <span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it\'</span>)({\n  <span class="highlight__attr">html</span>: <span class="highlight__literal">true</span>,\n  <span class="highlight__attr">xhtmlOut</span>: <span class="highlight__literal">true</span>,\n  <span class="highlight__attr">breaks</span>: <span class="highlight__literal">true</span>,\n  <span class="highlight__attr">typographer</span>: <span class="highlight__literal">true</span>,\n  <span class="highlight__title function_">highlight</span>(<span class="highlight__params">str, lang</span>) {\n    <span class="highlight__keyword">if</span> (lang &amp;&amp; hljs.<span class="highlight__title function_">getLanguage</span>(lang)) {\n      <span class="highlight__keyword">try</span> {\n        <span class="highlight__keyword">return</span> <span class="highlight__string">`&lt;pre class="highlight" data-language="<span class="highlight__subst">${lang.toUpperCase()}</span>"&gt;&lt;code&gt;<span class="highlight__subst">${\n          hljs.highlight(lang, str, <span class="highlight__literal">true</span>).value\n        }</span>&lt;/code&gt;&lt;/pre&gt;`</span>\n      } <span class="highlight__keyword">finally</span> {\n        <span class="highlight__comment">// No syntax highlighting</span>\n      }\n    }\n\n    <span class="highlight__keyword">return</span> <span class="highlight__string">`&lt;pre class="highlight"&gt;&lt;code&gt;<span class="highlight__subst">${markdown.utils.escapeHtml(\n      str\n    )}</span>&lt;/code&gt;&lt;/pre&gt;`</span>\n  }\n})\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-anchor\'</span>), {\n    <span class="highlight__attr">permalink</span>: <span class="highlight__literal">true</span>,\n    <span class="highlight__attr">permalinkSymbol</span>: <span class="highlight__string">\'#\'</span>,\n    <span class="highlight__attr">permalinkSpace</span>: <span class="highlight__literal">false</span>\n  })\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-task-lists\'</span>), {\n    <span class="highlight__attr">label</span>: <span class="highlight__literal">true</span>\n  })\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-abbr\'</span>))\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-sup\'</span>))\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-sub\'</span>))\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-mark\'</span>))\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-ins\'</span>))\n</span></code></pre>\n<h3 id="configuring-highlight.js" tabindex="-1"><a class="header-anchor" href="#configuring-highlight.js">Configuring Highlight.js</a></h3>\n<p>Firstly, I configure highlight.js. You can use the syntax highlighter of your choice in conjunction with markdown-it; the most popular syntax highlighting libraries are <a href="https://github.com/search?l=JavaScript&amp;o=desc&amp;q=syntax+highlighting&amp;s=stars&amp;type=Repositories">highlight.js and Prism</a>, it’s up to you which you use. I do two things in setting up syntax highlighting:</p>\n<ol>\n<li>Change the <code>classPrefix</code> to <code>highlight__</code>. All my other class names use BEM so I felt the need to do this for consistency’s sake.</li>\n<li>Set up language aliases. I’ve only needed one alias, namely highlighting <code>vue</code> code blocks as <code>html</code>.</li>\n</ol>\n<pre class="highlight" data-language="js"><code><span class="highlight__lines"><span data-number=" 1"></span><span data-number=" 2"></span><span data-number=" 3"></span><span data-number=" 4"></span><span data-number=" 5"></span></span><span class="highlight__code"><span class="highlight__keyword">const</span> hljs = <span class="highlight__built_in">require</span>(<span class="highlight__string">\'highlight.js\'</span>)\nhljs.<span class="highlight__title function_">configure</span>({\n  <span class="highlight__attr">classPrefix</span>: <span class="highlight__string">\'highlight__\'</span>\n})\nhljs.<span class="highlight__title function_">registerLanguage</span>(<span class="highlight__string">\'vue\'</span>, <span class="highlight__function">() =&gt;</span> hljs.<span class="highlight__title function_">getLanguage</span>(<span class="highlight__string">\'html\'</span>))\n</span></code></pre>\n<h3 id="configuring-markdown-it" tabindex="-1"><a class="header-anchor" href="#configuring-markdown-it">Configuring Markdown-It</a></h3>\n<p>Secondly, I pass some configuration options to markdown-it:</p>\n<ul>\n<li><code>html: true</code> allows me to put raw HTML into my Markdown files. This also allows me to put Vue components into my Markdown files, as explained in my previous blog post, <nuxt-link to="/blog/build-a-blog-with-nuxt-and-markdown/">Build a Blog with Nuxt and Markdown</nuxt-link>.</li>\n<li><code>xhtmlOut: true</code> converts newlines <code>\\n</code> in paragraphs into break tags <code>&lt;br/&gt;</code>.</li>\n<li><code>typographer: true</code> enables some “language-neutral replacement” and beautifies quotation marks.</li>\n</ul>\n<pre class="highlight" data-language="js"><code><span class="highlight__lines"><span data-number=" 7"></span><span data-number=" 8"></span><span data-number=" 9"></span><span data-number="10"></span><span data-number="11"></span><span data-number="12"></span><span data-number="13"></span><span data-number="14"></span><span data-number="15"></span><span data-number="16"></span><span data-number="17"></span><span data-number="18"></span><span data-number="19"></span><span data-number="20"></span><span data-number="21"></span><span data-number="22"></span><span data-number="23"></span><span data-number="24"></span><span data-number="25"></span><span data-number="26"></span><span data-number="27"></span></span><span class="highlight__code"><span class="highlight__keyword">const</span> markdown = <span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it\'</span>)({\n  <span class="highlight__attr">html</span>: <span class="highlight__literal">true</span>,\n  <span class="highlight__attr">xhtmlOut</span>: <span class="highlight__literal">true</span>,\n  <span class="highlight__attr">breaks</span>: <span class="highlight__literal">true</span>,\n  <span class="highlight__attr">typographer</span>: <span class="highlight__literal">true</span>,\n  <span class="highlight__title function_">highlight</span>(<span class="highlight__params">str, lang</span>) {\n    <span class="highlight__keyword">if</span> (lang &amp;&amp; hljs.<span class="highlight__title function_">getLanguage</span>(lang)) {\n      <span class="highlight__keyword">try</span> {\n        <span class="highlight__keyword">return</span> <span class="highlight__string">`&lt;pre class="highlight" data-language="<span class="highlight__subst">${lang.toUpperCase()}</span>"&gt;&lt;code&gt;<span class="highlight__subst">${\n          hljs.highlight(lang, str, <span class="highlight__literal">true</span>).value\n        }</span>&lt;/code&gt;&lt;/pre&gt;`</span>\n      } <span class="highlight__keyword">finally</span> {\n        <span class="highlight__comment">// No syntax highlighting</span>\n      }\n    }\n\n    <span class="highlight__keyword">return</span> <span class="highlight__string">`&lt;pre class="highlight"&gt;&lt;code&gt;<span class="highlight__subst">${markdown.utils.escapeHtml(\n      str\n    )}</span>&lt;/code&gt;&lt;/pre&gt;`</span>\n  }\n})\n</span></code></pre>\n<p>Within the markdown-it configuration, I also enable syntax highlighting. Essentially, I attempt to highlight the code with the given language using highlight.js and if this fails then I just degrade to the plain text in a code block.</p>\n<p>Note that within the syntax highlighting configuration, I add a <code>data-language</code> attribute which stores the language of the code block. This allows me to add the name of the language to the top right of the code block using a pseudo-element like so:</p>\n<pre class="highlight" data-language="css"><code><span class="highlight__lines"><span data-number=" 1"></span><span data-number=" 2"></span><span data-number=" 3"></span><span data-number=" 4"></span><span data-number=" 5"></span><span data-number=" 6"></span><span data-number=" 7"></span><span data-number=" 8"></span></span><span class="highlight__code">pre<span class="highlight__selector-attr">[data-language]</span><span class="highlight__selector-pseudo">::after</span> {\n  <span class="highlight__attribute">background-color</span>: grey;\n  <span class="highlight__attribute">content</span>: <span class="highlight__string">\'.\'</span> <span class="highlight__built_in">attr</span>(data-language); <span class="highlight__comment">/* The cool bit! */</span>\n  <span class="highlight__attribute">padding</span>: <span class="highlight__number">0.5rem</span>;\n  <span class="highlight__attribute">position</span>: absolute;\n  <span class="highlight__attribute">right</span>: <span class="highlight__number">0</span>;\n  <span class="highlight__attribute">top</span>: <span class="highlight__number">0</span>;\n}\n</span></code></pre>\n<h2 id="markdown-it-plugins" tabindex="-1"><a class="header-anchor" href="#markdown-it-plugins">Markdown-It Plugins</a></h2>\n<p>There are some great plugins out there to extend the functionality of markdown-it. I use several plugins to:</p>\n<ul>\n<li>Add heading anchors</li>\n<li>Add task lists to Markdown (this is taken from <abbr title="GitHub Flavoured Markdown">GFM</abbr>)</li>\n<li>Add abbreviations, for example, ‘<abbr title="GitHub Flavoured Markdown">GFM</abbr>’</li>\n<li>Add <sup>superscript</sup> text</li>\n<li>Add <sub>subscript</sub> text</li>\n<li>Add <mark>marked</mark> text</li>\n<li>Add <ins>inserted</ins> text</li>\n</ul>\n<pre class="highlight" data-language="js"><code><span class="highlight__lines"><span data-number="28"></span><span data-number="29"></span><span data-number="30"></span><span data-number="31"></span><span data-number="32"></span><span data-number="33"></span><span data-number="34"></span><span data-number="35"></span><span data-number="36"></span><span data-number="37"></span><span data-number="38"></span><span data-number="39"></span><span data-number="40"></span></span><span class="highlight__code">  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-anchor\'</span>), {\n    <span class="highlight__attr">permalink</span>: <span class="highlight__literal">true</span>,\n    <span class="highlight__attr">permalinkSymbol</span>: <span class="highlight__string">\'#\'</span>,\n    <span class="highlight__attr">permalinkSpace</span>: <span class="highlight__literal">false</span>\n  })\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-task-lists\'</span>), {\n    <span class="highlight__attr">label</span>: <span class="highlight__literal">true</span>\n  })\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-abbr\'</span>))\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-sup\'</span>))\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-sub\'</span>))\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-mark\'</span>))\n  .<span class="highlight__title function_">use</span>(<span class="highlight__built_in">require</span>(<span class="highlight__string">\'markdown-it-ins\'</span>))\n</span></code></pre>\n<p>Have fun tinkering with your Markdown configuration!</p>\n\x3c!-- prettier-ignore --\x3e\n',body:"<post-aside type=\"info\">\n\nMy Markdown configuration has changed considerably since I wrote this blog post but this is still a good starting point! If you want to view my updated configuration, [view the source on GitHub](https://github.com/gregives/gregives.co.uk/blob/master/config/markdown.js).\n\n</post-aside>\n\nI use [markdown-it](https://github.com/markdown-it/markdown-it) and [highlight.js](https://highlightjs.org) to render my blog posts. Out of the box, markdown-it and highlight.js may provide all the functionality you need, however, customising them enables you to do stuff like:\n\n- Display the language of code blocks\n- Add new language aliases for syntax highlighting\n- Use [BEM](http://getbem.com/naming) class names\n- Add heading anchors\n- Use proper quote characters e.g. “”\n- Open external links in new tabs\n- Write abbreviations, subscript, superscript and more in Markdown\n\n## The Configuration\n\nI've been slowly tinkering with my configuration and I'll keep updating this blog post as I change it. In this short blog post I'll explain everything in the configuration, but before I do that, here's the whole thing:\n\n```js\nconst hljs = require('highlight.js')\nhljs.configure({\n  classPrefix: 'highlight__'\n})\nhljs.registerLanguage('vue', () => hljs.getLanguage('html'))\n\nconst markdown = require('markdown-it')({\n  html: true,\n  xhtmlOut: true,\n  breaks: true,\n  typographer: true,\n  highlight(str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return `<pre class=\"highlight\" data-language=\"${lang.toUpperCase()}\"><code>${\n          hljs.highlight(lang, str, true).value\n        }</code></pre>`\n      } finally {\n        // No syntax highlighting\n      }\n    }\n\n    return `<pre class=\"highlight\"><code>${markdown.utils.escapeHtml(\n      str\n    )}</code></pre>`\n  }\n})\n  .use(require('markdown-it-anchor'), {\n    permalink: true,\n    permalinkSymbol: '#',\n    permalinkSpace: false\n  })\n  .use(require('markdown-it-task-lists'), {\n    label: true\n  })\n  .use(require('markdown-it-abbr'))\n  .use(require('markdown-it-sup'))\n  .use(require('markdown-it-sub'))\n  .use(require('markdown-it-mark'))\n  .use(require('markdown-it-ins'))\n```\n\n### Configuring Highlight.js\n\nFirstly, I configure highlight.js. You can use the syntax highlighter of your choice in conjunction with markdown-it; the most popular syntax highlighting libraries are [highlight.js and Prism](https://github.com/search?l=JavaScript&o=desc&q=syntax+highlighting&s=stars&type=Repositories), it's up to you which you use. I do two things in setting up syntax highlighting:\n\n1. Change the `classPrefix` to `highlight__`. All my other class names use BEM so I felt the need to do this for consistency's sake.\n2. Set up language aliases. I've only needed one alias, namely highlighting `vue` code blocks as `html`.\n\n```js\nconst hljs = require('highlight.js')\nhljs.configure({\n  classPrefix: 'highlight__'\n})\nhljs.registerLanguage('vue', () => hljs.getLanguage('html'))\n```\n\n### Configuring Markdown-It\n\nSecondly, I pass some configuration options to markdown-it:\n\n- `html: true` allows me to put raw HTML into my Markdown files. This also allows me to put Vue components into my Markdown files, as explained in my previous blog post, <nuxt-link to=\"/blog/build-a-blog-with-nuxt-and-markdown/\">Build a Blog with Nuxt and Markdown</nuxt-link>.\n- `xhtmlOut: true` converts newlines `\\n` in paragraphs into break tags `<br/>`.\n- `typographer: true` enables some \"language-neutral replacement\" and beautifies quotation marks.\n\n```js {} 7\nconst markdown = require('markdown-it')({\n  html: true,\n  xhtmlOut: true,\n  breaks: true,\n  typographer: true,\n  highlight(str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return `<pre class=\"highlight\" data-language=\"${lang.toUpperCase()}\"><code>${\n          hljs.highlight(lang, str, true).value\n        }</code></pre>`\n      } finally {\n        // No syntax highlighting\n      }\n    }\n\n    return `<pre class=\"highlight\"><code>${markdown.utils.escapeHtml(\n      str\n    )}</code></pre>`\n  }\n})\n```\n\nWithin the markdown-it configuration, I also enable syntax highlighting. Essentially, I attempt to highlight the code with the given language using highlight.js and if this fails then I just degrade to the plain text in a code block.\n\nNote that within the syntax highlighting configuration, I add a `data-language` attribute which stores the language of the code block. This allows me to add the name of the language to the top right of the code block using a pseudo-element like so:\n\n```css\npre[data-language]::after {\n  background-color: grey;\n  content: '.' attr(data-language); /* The cool bit! */\n  padding: 0.5rem;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n```\n\n## Markdown-It Plugins\n\nThere are some great plugins out there to extend the functionality of markdown-it. I use several plugins to:\n\n- Add heading anchors\n- Add task lists to Markdown (this is taken from GFM)\n- Add abbreviations, for example, 'GFM'\n- Add ^superscript^ text\n- Add ~subscript~ text\n- Add ==marked== text\n- Add ++inserted++ text\n\n```js {} 28\n  .use(require('markdown-it-anchor'), {\n    permalink: true,\n    permalinkSymbol: '#',\n    permalinkSpace: false\n  })\n  .use(require('markdown-it-task-lists'), {\n    label: true\n  })\n  .use(require('markdown-it-abbr'))\n  .use(require('markdown-it-sup'))\n  .use(require('markdown-it-sub'))\n  .use(require('markdown-it-mark'))\n  .use(require('markdown-it-ins'))\n```\n\nHave fun tinkering with your Markdown configuration!\n\n\x3c!-- prettier-ignore --\x3e\n*[GFM]: GitHub Flavoured Markdown\n",vue:{render:'return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"markdown"},[_vm._m(0),_c(\'post-aside\',{attrs:{"type":"info"}},[_c(\'p\',[_vm._v("My Markdown configuration has changed considerably since I wrote this blog post but this is still a good starting point! If you want to view my updated configuration, "),_c(\'a\',{attrs:{"href":"https://github.com/gregives/gregives.co.uk/blob/master/config/markdown.js"}},[_vm._v("view the source on GitHub")]),_vm._v(".")])]),_vm._v(" "),_vm._m(1),_vm._v(" "),_vm._m(2),_vm._v(" "),_vm._m(3),_vm._v(" "),_c(\'p\',[_vm._v("I’ve been slowly tinkering with my configuration and I’ll keep updating this blog post as I change it. In this short blog post I’ll explain everything in the configuration, but before I do that, here’s the whole thing:")]),_vm._v(" "),_vm._m(4),_vm._v(" "),_vm._m(5),_vm._v(" "),_vm._m(6),_vm._v(" "),_vm._m(7),_vm._v(" "),_vm._m(8),_vm._v(" "),_vm._m(9),_vm._v(" "),_c(\'p\',[_vm._v("Secondly, I pass some configuration options to markdown-it:")]),_vm._v(" "),_c(\'ul\',[_c(\'li\',[_c(\'code\',{pre:true},[_vm._v("html: true")]),_vm._v(" allows me to put raw HTML into my Markdown files. This also allows me to put Vue components into my Markdown files, as explained in my previous blog post, "),_c(\'nuxt-link\',{attrs:{"to":"/blog/build-a-blog-with-nuxt-and-markdown/"}},[_vm._v("Build a Blog with Nuxt and Markdown")]),_vm._v(".")],1),_vm._v(" "),_vm._m(10),_vm._v(" "),_vm._m(11)]),_vm._v(" "),_vm._m(12),_vm._v(" "),_c(\'p\',[_vm._v("Within the markdown-it configuration, I also enable syntax highlighting. Essentially, I attempt to highlight the code with the given language using highlight.js and if this fails then I just degrade to the plain text in a code block.")]),_vm._v(" "),_vm._m(13),_vm._v(" "),_vm._m(14),_vm._v(" "),_vm._m(15),_vm._v(" "),_c(\'p\',[_vm._v("There are some great plugins out there to extend the functionality of markdown-it. I use several plugins to:")]),_vm._v(" "),_vm._m(16),_vm._v(" "),_vm._m(17),_vm._v(" "),_c(\'p\',[_vm._v("Have fun tinkering with your Markdown configuration!")])],1) }',staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'nav\',{staticClass:"table-of-contents"},[_c(\'ol\',[_c(\'li\',[_c(\'a\',{attrs:{"href":"#the-configuration"}},[_vm._v("The Configuration")]),_c(\'ol\',[_c(\'li\',[_c(\'a\',{attrs:{"href":"#configuring-highlight.js"}},[_vm._v("Configuring Highlight.js")])]),_c(\'li\',[_c(\'a\',{attrs:{"href":"#configuring-markdown-it"}},[_vm._v("Configuring Markdown-It")])])])]),_c(\'li\',[_c(\'a\',{attrs:{"href":"#markdown-it-plugins"}},[_vm._v("Markdown-It Plugins")])])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("I use "),_c(\'a\',{attrs:{"href":"https://github.com/markdown-it/markdown-it"}},[_vm._v("markdown-it")]),_vm._v(" and "),_c(\'a\',{attrs:{"href":"https://highlightjs.org"}},[_vm._v("highlight.js")]),_vm._v(" to render my blog posts. Out of the box, markdown-it and highlight.js may provide all the functionality you need, however, customising them enables you to do stuff like:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_vm._v("Display the language of code blocks")]),_vm._v(" "),_c(\'li\',[_vm._v("Add new language aliases for syntax highlighting")]),_vm._v(" "),_c(\'li\',[_vm._v("Use "),_c(\'a\',{attrs:{"href":"http://getbem.com/naming"}},[_vm._v("BEM")]),_vm._v(" class names")]),_vm._v(" "),_c(\'li\',[_vm._v("Add heading anchors")]),_vm._v(" "),_c(\'li\',[_vm._v("Use proper quote characters e.g. “”")]),_vm._v(" "),_c(\'li\',[_vm._v("Open external links in new tabs")]),_vm._v(" "),_c(\'li\',[_vm._v("Write abbreviations, subscript, superscript and more in Markdown")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'h2\',{attrs:{"id":"the-configuration","tabindex":"-1"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#the-configuration"}},[_vm._v("The Configuration")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',{staticClass:"highlight",attrs:{"data-language":"js"}},[_c(\'code\',{pre:true},[_c(\'span\',{pre:true,attrs:{"class":"highlight__lines"}},[_c(\'span\',{pre:true,attrs:{"data-number":" 1"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 2"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 3"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 4"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 5"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 6"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 7"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 8"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 9"}}),_c(\'span\',{pre:true,attrs:{"data-number":"10"}}),_c(\'span\',{pre:true,attrs:{"data-number":"11"}}),_c(\'span\',{pre:true,attrs:{"data-number":"12"}}),_c(\'span\',{pre:true,attrs:{"data-number":"13"}}),_c(\'span\',{pre:true,attrs:{"data-number":"14"}}),_c(\'span\',{pre:true,attrs:{"data-number":"15"}}),_c(\'span\',{pre:true,attrs:{"data-number":"16"}}),_c(\'span\',{pre:true,attrs:{"data-number":"17"}}),_c(\'span\',{pre:true,attrs:{"data-number":"18"}}),_c(\'span\',{pre:true,attrs:{"data-number":"19"}}),_c(\'span\',{pre:true,attrs:{"data-number":"20"}}),_c(\'span\',{pre:true,attrs:{"data-number":"21"}}),_c(\'span\',{pre:true,attrs:{"data-number":"22"}}),_c(\'span\',{pre:true,attrs:{"data-number":"23"}}),_c(\'span\',{pre:true,attrs:{"data-number":"24"}}),_c(\'span\',{pre:true,attrs:{"data-number":"25"}}),_c(\'span\',{pre:true,attrs:{"data-number":"26"}}),_c(\'span\',{pre:true,attrs:{"data-number":"27"}}),_c(\'span\',{pre:true,attrs:{"data-number":"28"}}),_c(\'span\',{pre:true,attrs:{"data-number":"29"}}),_c(\'span\',{pre:true,attrs:{"data-number":"30"}}),_c(\'span\',{pre:true,attrs:{"data-number":"31"}}),_c(\'span\',{pre:true,attrs:{"data-number":"32"}}),_c(\'span\',{pre:true,attrs:{"data-number":"33"}}),_c(\'span\',{pre:true,attrs:{"data-number":"34"}}),_c(\'span\',{pre:true,attrs:{"data-number":"35"}}),_c(\'span\',{pre:true,attrs:{"data-number":"36"}}),_c(\'span\',{pre:true,attrs:{"data-number":"37"}}),_c(\'span\',{pre:true,attrs:{"data-number":"38"}}),_c(\'span\',{pre:true,attrs:{"data-number":"39"}}),_c(\'span\',{pre:true,attrs:{"data-number":"40"}})]),_c(\'span\',{pre:true,attrs:{"class":"highlight__code"}},[_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("const")]),_vm._v(" hljs = "),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'highlight.js\'")]),_vm._v(")\\nhljs."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("configure")]),_vm._v("({\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("classPrefix")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'highlight__\'")]),_vm._v("\\n})\\nhljs."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("registerLanguage")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'vue\'")]),_vm._v(", "),_c(\'span\',{pre:true,attrs:{"class":"highlight__function"}},[_vm._v("() =>")]),_vm._v(" hljs."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("getLanguage")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'html\'")]),_vm._v("))\\n\\n"),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("const")]),_vm._v(" markdown = "),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it\'")]),_vm._v(")({\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("html")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("xhtmlOut")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("breaks")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("typographer")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("highlight")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__params"}},[_vm._v("str, lang")]),_vm._v(") {\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("if")]),_vm._v(" (lang && hljs."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("getLanguage")]),_vm._v("(lang)) {\\n      "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("try")]),_vm._v(" {\\n        "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("return")]),_vm._v(" "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("`<pre class=\\"highlight\\" data-language=\\""),_c(\'span\',{pre:true,attrs:{"class":"highlight__subst"}},[_vm._v("${lang.toUpperCase()}")]),_vm._v("\\"><code>"),_c(\'span\',{pre:true,attrs:{"class":"highlight__subst"}},[_vm._v("${\\n          hljs.highlight(lang, str, "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(").value\\n        }")]),_vm._v("</code></pre>`")]),_vm._v("\\n      } "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("finally")]),_vm._v(" {\\n        "),_c(\'span\',{pre:true,attrs:{"class":"highlight__comment"}},[_vm._v("// No syntax highlighting")]),_vm._v("\\n      }\\n    }\\n\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("return")]),_vm._v(" "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("`<pre class=\\"highlight\\"><code>"),_c(\'span\',{pre:true,attrs:{"class":"highlight__subst"}},[_vm._v("${markdown.utils.escapeHtml(\\n      str\\n    )}")]),_vm._v("</code></pre>`")]),_vm._v("\\n  }\\n})\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-anchor\'")]),_vm._v("), {\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("permalink")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("permalinkSymbol")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'#\'")]),_vm._v(",\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("permalinkSpace")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("false")]),_vm._v("\\n  })\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-task-lists\'")]),_vm._v("), {\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("label")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v("\\n  })\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-abbr\'")]),_vm._v("))\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-sup\'")]),_vm._v("))\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-sub\'")]),_vm._v("))\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-mark\'")]),_vm._v("))\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-ins\'")]),_vm._v("))\\n")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'h3\',{attrs:{"id":"configuring-highlight.js","tabindex":"-1"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#configuring-highlight.js"}},[_vm._v("Configuring Highlight.js")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Firstly, I configure highlight.js. You can use the syntax highlighter of your choice in conjunction with markdown-it; the most popular syntax highlighting libraries are "),_c(\'a\',{attrs:{"href":"https://github.com/search?l=JavaScript&o=desc&q=syntax+highlighting&s=stars&type=Repositories"}},[_vm._v("highlight.js and Prism")]),_vm._v(", it’s up to you which you use. I do two things in setting up syntax highlighting:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ol\',[_c(\'li\',[_vm._v("Change the "),_c(\'code\',{pre:true},[_vm._v("classPrefix")]),_vm._v(" to "),_c(\'code\',{pre:true},[_vm._v("highlight__")]),_vm._v(". All my other class names use BEM so I felt the need to do this for consistency’s sake.")]),_vm._v(" "),_c(\'li\',[_vm._v("Set up language aliases. I’ve only needed one alias, namely highlighting "),_c(\'code\',{pre:true},[_vm._v("vue")]),_vm._v(" code blocks as "),_c(\'code\',{pre:true},[_vm._v("html")]),_vm._v(".")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',{staticClass:"highlight",attrs:{"data-language":"js"}},[_c(\'code\',{pre:true},[_c(\'span\',{pre:true,attrs:{"class":"highlight__lines"}},[_c(\'span\',{pre:true,attrs:{"data-number":" 1"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 2"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 3"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 4"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 5"}})]),_c(\'span\',{pre:true,attrs:{"class":"highlight__code"}},[_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("const")]),_vm._v(" hljs = "),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'highlight.js\'")]),_vm._v(")\\nhljs."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("configure")]),_vm._v("({\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("classPrefix")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'highlight__\'")]),_vm._v("\\n})\\nhljs."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("registerLanguage")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'vue\'")]),_vm._v(", "),_c(\'span\',{pre:true,attrs:{"class":"highlight__function"}},[_vm._v("() =>")]),_vm._v(" hljs."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("getLanguage")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'html\'")]),_vm._v("))\\n")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'h3\',{attrs:{"id":"configuring-markdown-it","tabindex":"-1"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#configuring-markdown-it"}},[_vm._v("Configuring Markdown-It")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'li\',[_c(\'code\',{pre:true},[_vm._v("xhtmlOut: true")]),_vm._v(" converts newlines "),_c(\'code\',{pre:true},[_vm._v("\\\\n")]),_vm._v(" in paragraphs into break tags "),_c(\'code\',{pre:true},[_vm._v("<br/>")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'li\',[_c(\'code\',{pre:true},[_vm._v("typographer: true")]),_vm._v(" enables some “language-neutral replacement” and beautifies quotation marks.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',{staticClass:"highlight",attrs:{"data-language":"js"}},[_c(\'code\',{pre:true},[_c(\'span\',{pre:true,attrs:{"class":"highlight__lines"}},[_c(\'span\',{pre:true,attrs:{"data-number":" 7"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 8"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 9"}}),_c(\'span\',{pre:true,attrs:{"data-number":"10"}}),_c(\'span\',{pre:true,attrs:{"data-number":"11"}}),_c(\'span\',{pre:true,attrs:{"data-number":"12"}}),_c(\'span\',{pre:true,attrs:{"data-number":"13"}}),_c(\'span\',{pre:true,attrs:{"data-number":"14"}}),_c(\'span\',{pre:true,attrs:{"data-number":"15"}}),_c(\'span\',{pre:true,attrs:{"data-number":"16"}}),_c(\'span\',{pre:true,attrs:{"data-number":"17"}}),_c(\'span\',{pre:true,attrs:{"data-number":"18"}}),_c(\'span\',{pre:true,attrs:{"data-number":"19"}}),_c(\'span\',{pre:true,attrs:{"data-number":"20"}}),_c(\'span\',{pre:true,attrs:{"data-number":"21"}}),_c(\'span\',{pre:true,attrs:{"data-number":"22"}}),_c(\'span\',{pre:true,attrs:{"data-number":"23"}}),_c(\'span\',{pre:true,attrs:{"data-number":"24"}}),_c(\'span\',{pre:true,attrs:{"data-number":"25"}}),_c(\'span\',{pre:true,attrs:{"data-number":"26"}}),_c(\'span\',{pre:true,attrs:{"data-number":"27"}})]),_c(\'span\',{pre:true,attrs:{"class":"highlight__code"}},[_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("const")]),_vm._v(" markdown = "),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it\'")]),_vm._v(")({\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("html")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("xhtmlOut")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("breaks")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("typographer")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("highlight")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__params"}},[_vm._v("str, lang")]),_vm._v(") {\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("if")]),_vm._v(" (lang && hljs."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("getLanguage")]),_vm._v("(lang)) {\\n      "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("try")]),_vm._v(" {\\n        "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("return")]),_vm._v(" "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("`<pre class=\\"highlight\\" data-language=\\""),_c(\'span\',{pre:true,attrs:{"class":"highlight__subst"}},[_vm._v("${lang.toUpperCase()}")]),_vm._v("\\"><code>"),_c(\'span\',{pre:true,attrs:{"class":"highlight__subst"}},[_vm._v("${\\n          hljs.highlight(lang, str, "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(").value\\n        }")]),_vm._v("</code></pre>`")]),_vm._v("\\n      } "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("finally")]),_vm._v(" {\\n        "),_c(\'span\',{pre:true,attrs:{"class":"highlight__comment"}},[_vm._v("// No syntax highlighting")]),_vm._v("\\n      }\\n    }\\n\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__keyword"}},[_vm._v("return")]),_vm._v(" "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("`<pre class=\\"highlight\\"><code>"),_c(\'span\',{pre:true,attrs:{"class":"highlight__subst"}},[_vm._v("${markdown.utils.escapeHtml(\\n      str\\n    )}")]),_vm._v("</code></pre>`")]),_vm._v("\\n  }\\n})\\n")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Note that within the syntax highlighting configuration, I add a "),_c(\'code\',{pre:true},[_vm._v("data-language")]),_vm._v(" attribute which stores the language of the code block. This allows me to add the name of the language to the top right of the code block using a pseudo-element like so:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',{staticClass:"highlight",attrs:{"data-language":"css"}},[_c(\'code\',{pre:true},[_c(\'span\',{pre:true,attrs:{"class":"highlight__lines"}},[_c(\'span\',{pre:true,attrs:{"data-number":" 1"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 2"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 3"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 4"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 5"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 6"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 7"}}),_c(\'span\',{pre:true,attrs:{"data-number":" 8"}})]),_c(\'span\',{pre:true,attrs:{"class":"highlight__code"}},[_vm._v("pre"),_c(\'span\',{pre:true,attrs:{"class":"highlight__selector-attr"}},[_vm._v("[data-language]")]),_c(\'span\',{pre:true,attrs:{"class":"highlight__selector-pseudo"}},[_vm._v("::after")]),_vm._v(" {\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attribute"}},[_vm._v("background-color")]),_vm._v(": grey;\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attribute"}},[_vm._v("content")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'.\'")]),_vm._v(" "),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("attr")]),_vm._v("(data-language); "),_c(\'span\',{pre:true,attrs:{"class":"highlight__comment"}},[_vm._v("/* The cool bit! */")]),_vm._v("\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attribute"}},[_vm._v("padding")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__number"}},[_vm._v("0.5rem")]),_vm._v(";\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attribute"}},[_vm._v("position")]),_vm._v(": absolute;\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attribute"}},[_vm._v("right")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__number"}},[_vm._v("0")]),_vm._v(";\\n  "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attribute"}},[_vm._v("top")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__number"}},[_vm._v("0")]),_vm._v(";\\n}\\n")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'h2\',{attrs:{"id":"markdown-it-plugins","tabindex":"-1"}},[_c(\'a\',{staticClass:"header-anchor",attrs:{"href":"#markdown-it-plugins"}},[_vm._v("Markdown-It Plugins")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_vm._v("Add heading anchors")]),_vm._v(" "),_c(\'li\',[_vm._v("Add task lists to Markdown (this is taken from "),_c(\'abbr\',{attrs:{"title":"GitHub Flavoured Markdown"}},[_vm._v("GFM")]),_vm._v(")")]),_vm._v(" "),_c(\'li\',[_vm._v("Add abbreviations, for example, ‘"),_c(\'abbr\',{attrs:{"title":"GitHub Flavoured Markdown"}},[_vm._v("GFM")]),_vm._v("’")]),_vm._v(" "),_c(\'li\',[_vm._v("Add "),_c(\'sup\',[_vm._v("superscript")]),_vm._v(" text")]),_vm._v(" "),_c(\'li\',[_vm._v("Add "),_c(\'sub\',[_vm._v("subscript")]),_vm._v(" text")]),_vm._v(" "),_c(\'li\',[_vm._v("Add "),_c(\'mark\',[_vm._v("marked")]),_vm._v(" text")]),_vm._v(" "),_c(\'li\',[_vm._v("Add "),_c(\'ins\',[_vm._v("inserted")]),_vm._v(" text")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',{staticClass:"highlight",attrs:{"data-language":"js"}},[_c(\'code\',{pre:true},[_c(\'span\',{pre:true,attrs:{"class":"highlight__lines"}},[_c(\'span\',{pre:true,attrs:{"data-number":"28"}}),_c(\'span\',{pre:true,attrs:{"data-number":"29"}}),_c(\'span\',{pre:true,attrs:{"data-number":"30"}}),_c(\'span\',{pre:true,attrs:{"data-number":"31"}}),_c(\'span\',{pre:true,attrs:{"data-number":"32"}}),_c(\'span\',{pre:true,attrs:{"data-number":"33"}}),_c(\'span\',{pre:true,attrs:{"data-number":"34"}}),_c(\'span\',{pre:true,attrs:{"data-number":"35"}}),_c(\'span\',{pre:true,attrs:{"data-number":"36"}}),_c(\'span\',{pre:true,attrs:{"data-number":"37"}}),_c(\'span\',{pre:true,attrs:{"data-number":"38"}}),_c(\'span\',{pre:true,attrs:{"data-number":"39"}}),_c(\'span\',{pre:true,attrs:{"data-number":"40"}})]),_c(\'span\',{pre:true,attrs:{"class":"highlight__code"}},[_vm._v("  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-anchor\'")]),_vm._v("), {\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("permalink")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v(",\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("permalinkSymbol")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'#\'")]),_vm._v(",\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("permalinkSpace")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("false")]),_vm._v("\\n  })\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-task-lists\'")]),_vm._v("), {\\n    "),_c(\'span\',{pre:true,attrs:{"class":"highlight__attr"}},[_vm._v("label")]),_vm._v(": "),_c(\'span\',{pre:true,attrs:{"class":"highlight__literal"}},[_vm._v("true")]),_vm._v("\\n  })\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-abbr\'")]),_vm._v("))\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-sup\'")]),_vm._v("))\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-sub\'")]),_vm._v("))\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-mark\'")]),_vm._v("))\\n  ."),_c(\'span\',{pre:true,attrs:{"class":"highlight__title function_"}},[_vm._v("use")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__built_in"}},[_vm._v("require")]),_vm._v("("),_c(\'span\',{pre:true,attrs:{"class":"highlight__string"}},[_vm._v("\'markdown-it-ins\'")]),_vm._v("))\\n")])])]) }]'}}}}]);